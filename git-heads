#!/bin/sh
##
## git-heads -- show unmerged branches with git-log(1)
##
## Usage: git-heads [OPTIONS] [git-log-OPTION...]
##     -a, --all     list all branches
##     -l, --local   only local branches
##     -r, --remote  only remote branches

git_exec_path="$(git --exec-path)"

ifs="$IFS"
IFS=":"
for dir in $git_exec_path; do
    [ -f "$dir/git-sh-setup" -a -r "$dir/git-sh-setup" ] \
            && . "$dir/git-sh-setup" && break
done || {
    echo "fatal: unable to find and source git-sh-setup in" \
         "GIT_EXEC_PATH=$git_exec_path" >&2
    exit 1
}
IFS="$ifs"

require_work_tree

if git config --get-colorbool color.log; then
    color_auto="always"
else
    color_auto="never"
fi
git_branch_args="--color=never"
git_log_args="--color=$color_auto -n 1"

while [ "$#" -gt 0 ]; do
    case "$1" in
        (-a|--all)
            git_branch_args="$git_branch_args -a"
            shift
            ;;
        (-l|--local)
            shift
            ;;
        (-r|--remote)
            git_branch_args="$git_branch_args -r"
            shift
            ;;
        (--contains|--merged|--no-merged)
            if [ -n "$2" -a "$2" = "${2#-}" ]; then
                git_branch_args="$git_branch_args '$1=$2'"
                shift 2
            else
                git_branch_args="$git_branch_args '$1=HEAD'"
                shift
            fi
            ;;
        (--contains=*|--merged=*|--no-merged=*)
            git_branch_args="$git_branch_args '$1'"
            shift
            ;;
        (--color)
            case "$2" in
                (always)
                    git_log_args="$git_log_args --color=always"
                    shift 2
                    ;;
                (auto)
                    git_log_args="$git_log_args --color=$color_auto"
                    shift 2
                    ;;
                (never)
                    git_log_args="$git_log_args --color=never"
                    shift 2
                    ;;
                (*)
                    git_log_args="$git_log_args --color=always"
                    shift
                    ;;
            esac
            ;;
        (--color=auto)
            git_log_args="$git_log_args --color=$color_auto"
            shift
            ;;
        (--color=*)
            git_log_args="$git_log_args '$1'"
            shift
            ;;
        (--no-color)
            git_log_args="$git_log_args --color=never"
            shift
            ;;
        (*)
            git_log_args="$git_log_args '$1'"
            shift
            ;;
    esac
done

eval git branch $git_branch_args | grep -v '^\* (no branch)$\| -> ' \
        | sed 's/^..//' | while read -r ref; do
    echo
    eval git log $git_log_args "'$ref'" || exit 1
done | tail -n +2 | git_pager

